// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge service?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// START: USER

model User {
  id        String   @id @db.VarChar(36)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  ethAddress String    @unique @map("eth_address") @db.VarChar(50)
  sessions   Session[]

  @@index(ethAddress)
  @@map("users")
}

model Session {
  id        String   @id @db.VarChar(36)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  userId    String @map("user_id") @db.VarChar(36)
  ipAddress String @map("ip_address")
  userAgent String @map("user_agent")

  refreshTokenHash String   @map("refresh_token_hash")
  expired          DateTime

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, ipAddress, userAgent], name: "target")
  @@index(userId)
  @@map("sessions")
}

/// END: USER

/// START: AUTH

model AuthNonce {
  id        String   @id @db.VarChar(36)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  expired    DateTime
  ethAddress String   @unique @map("eth_address") @db.VarChar(50)
  nonce      String   @db.VarChar(40)

  @@index(ethAddress)
  @@map("auth_nonces")
}

/// END: AUTH
